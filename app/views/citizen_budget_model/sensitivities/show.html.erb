<% content_for :breadcrumb do %>
<ol class="breadcrumb">
  <li><%= link_to _('Sensitivity Tables'), sensitivities_path %></li>
  <li class="active"><%= @sensitivity.name %>
    <%= link_to [:edit, @sensitivity], class: 'btn btn-default btn-xs', title: _('Edit') do %>
      <span class="glyphicon glyphicon-pencil"></span>
    <% end %>
  </li>
</ol>
<% end %>

<h2><%= _('Publicly Editable Variables') %></h2>
<% if @sensitivity.variables.any? %>

<ul class="list-unstyled index sortable" data-sort-url="<%= sort_variable_sensitivity_path%>">
<% @sensitivity.variables.where(public_editable: true).each do |variable| %>
  <li id="<%= dom_id(variable) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to variable.name, [@sensitivity, variable] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, variable] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>

<h2><%= _('Not Public Editable Variables') %></h2>
<ul class="list-unstyled index sortable" data-sort-url="<%= sort_variable_sensitivity_path%>">
<% @sensitivity.variables.where(public_editable: false).each do |variable| %>
  <li id="<%= dom_id(variable) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to variable.name, [@sensitivity, variable] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, variable] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>

<% end %>

<p>
  <%= link_to(new_sensitivity_variable_path(@sensitivity), class: 'btn btn-primary') do %>
    <span class="glyphicon glyphicon-plus"></span> <%= _('Add a variable') %>
  <% end %>
</p>


<h2><%= _('Sections') %></h2>
<% if @sensitivity.sensitivity_sections.any? %>

  <ul class="list-unstyled index sortable">
<% @sensitivity.sensitivity_sections.each do |section| %>
  <li id="<%= dom_id(section) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to section.name, [@sensitivity, section] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, section] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>
<% end %>
<p>
  <%= link_to(new_sensitivity_sensitivity_section_path(@sensitivity), class: 'btn btn-primary') do %>
    <span class="glyphicon glyphicon-plus"></span> <%= _('Add a section') %>
  <% end %>
  </p>
  <p>Notes:</p>
  <ol>
    <li>After any changes to the variables and impacts, please check that the formula is still working</li>
    <li>Avoid recursive reference in formula</li>
    <li>Do not reference non-system cells</li>
    <li>Refence cell in capital letter.</li>
  </ol>
  <div id="hot"></div>
  <div class="formula2"></div>
  <div class="status"></div>

  <script>

  var table = document.getElementById('hot');
  var data = <%= @sensitivity.to_handsontable.to_json.html_safe %>;

  var hot2 = new Handsontable(table, {
    data: data,
    formulas: true,
    rowHeaders: true,
    colHeaders: true,
    columns: [
      {data: 'variable_name'},
      {data: 'pbo_assumption', type:'numeric', format:'0.00'},
      {data: 'user_input', type:'numeric', format:'0.00'},
      {data: ''},
      {data: 'sname'},
      {data: 'year_1_excel_formula', type:'numeric', format:'0.00'},
      {data: 'year_2_excel_formula', type:'numeric', format:'0.00'},
      {data: 'year_5_excel_formula', type:'numeric', format:'0.00'}
    ],
    afterChange: function (change, source) {
      if(change != undefined) {
        var re = /([A-Za-z]+\d+)+/g;
        var str = change[0][3];
        var data_row = change[0][0];
        var data_attr = change[0][1];
        var m, m2;
        var formula = str;

        if (data_attr == 'year_1_excel_formula' || data_attr == 'year_2_excel_formula' || data_attr == 'year_5_excel_formula') {
          while ((m = re.exec(str)) !== null) {
            if (m.index === re.lastIndex) {
                re.lastIndex++;
            }
            m2 = /([A-Za-z]+)(\d+)+/g.exec(m[0]);
            if (m2) {
              var row = parseInt(m2[2])-1;
              var col = m2[1];

              var impact_url = data[data_row]['impact_url'];
              formula = formula.replace(m[0], data[row][col]);
            }
          }
          var year_formula = data_attr.replace("_excel", "");
          var impact = {};
          impact[year_formula] = formula.replace("=", "");
          impact[data_attr] = str;
          $.ajax({
            url: impact_url,
            dataType: 'json',
            method: 'PUT',
            data: {
              impact: impact
            }
          }).fail(function() {
            $(".status").show().html("Error!");
          }).done(function() {
            $(".status").show().html("Saved");
          }).complete(function(){
            setTimeout(function(){
              $(".status").fadeOut(1000);
            }, 2000);
          });

          $(".formula2").html(formula);
        } else if(data_attr == 'pbo_assumption') {
          if (data_row > 0) {

            var variable_url = data[data_row]['variable_url'];
            $.ajax({
              url: variable_url,
              dataType: 'json',
              method: 'PUT',
              data: {
                variable: {
                  pbo_assumption: change[0][3]
                }
              }
            }).fail(function() {
              $(".status").show().html("Error!");
            }).done(function() {
              $(".status").show().html("Saved");
            }).complete(function(){
              setTimeout(function(){
                $(".status").fadeOut(1000);
              }, 2000);
            });

          } else {
            while ((m = re.exec(str)) !== null) {
              if (m.index === re.lastIndex) {
                  re.lastIndex++;
              }
              m2 = /([A-Za-z]+)(\d+)+/g.exec(m[0]);
              if (m2) {
                var row = parseInt(m2[2])-1;
                var col = m2[1];

                var url = data[data_row]['url'];
                formula = formula.replace(m[0], data[row][col]);
              }
            }

            var sensitivity = {};
            sensitivity['default_formula'] = formula.replace("=", "");
            sensitivity['default_excel_formula'] = str;
            $.ajax({
              url: url,
              dataType: 'json',
              method: 'PUT',
              data: {
                sensitivity: sensitivity
              }
            }).fail(function() {
              $(".status").show().html("Error!");
            }).done(function() {
              $(".status").show().html("Saved");
            }).complete(function(){
              setTimeout(function(){
                $(".status").fadeOut(1000);
              }, 2000);
            });

            $(".formula2").html(formula);
          }
        }
      }
    }
  });

</script>
