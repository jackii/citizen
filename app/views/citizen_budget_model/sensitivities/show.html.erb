<% content_for :breadcrumb do %>
<ol class="breadcrumb">
  <li><%= link_to _('Sensitivity Tables'), sensitivities_path %></li>
  <li class="active"><%= @sensitivity.name %>
    <%= link_to [:edit, @sensitivity], class: 'btn btn-default btn-xs', title: _('Edit') do %>
      <span class="glyphicon glyphicon-pencil"></span>
    <% end %>
  </li>
</ol>
<% end %>

<h2><%= _('Publicly Editable Variables') %></h2>
<% if @sensitivity.variables.any? %>

<ul class="list-unstyled index sortable" data-sort-url="<%= sort_variable_sensitivity_path%>">
<% @sensitivity.variables.where(public_editable: true).each do |variable| %>
  <li id="<%= dom_id(variable) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to variable.name, [@sensitivity, variable] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, variable] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>

<h2><%= _('Not Public Editable Variables') %></h2>
<ul class="list-unstyled index sortable" data-sort-url="<%= sort_variable_sensitivity_path%>">
<% @sensitivity.variables.where(public_editable: false).each do |variable| %>
  <li id="<%= dom_id(variable) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to variable.name, [@sensitivity, variable] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, variable] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>

<% end %>

<p>
  <%= link_to(new_sensitivity_variable_path(@sensitivity), class: 'btn btn-primary') do %>
    <span class="glyphicon glyphicon-plus"></span> <%= _('Add a variable') %>
  <% end %>
</p>


<h2><%= _('Sections') %></h2>
<% if @sensitivity.sensitivity_sections.any? %>

  <ul class="list-unstyled index sortable">
<% @sensitivity.sensitivity_sections.each do |section| %>
  <li id="<%= dom_id(section) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to section.name, [@sensitivity, section] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, section] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>
<% end %>
<p>
  <%= link_to(new_sensitivity_sensitivity_section_path(@sensitivity), class: 'btn btn-primary') do %>
    <span class="glyphicon glyphicon-plus"></span> <%= _('Add a section') %>
  <% end %>
  </p>
  <% @sections = Array.new %>
  <% @sensitivity.sensitivity_sections.each do |s| %>
    <% @sections << {name: s.name, is_title: true} %>
    <% s.impacts.each do |impact| %>
      <% @sections << {name: impact.name, is_title: false} %>
    <% end %>
    <% @sections << {name:'', is_title: false} %>
<% end %>


<div id="hot"></div>
<script>
  var public_variables = <%= @sensitivity.variables.where(public_editable: true).collect {|v| [v.name, v.pbo_assumption, v.default_value]}.to_json.html_safe ;%>
  var variables = <%= @sensitivity.variables.where(public_editable: false).collect {|v| [v.name, v.pbo_assumption, v.default_value]}.to_json.html_safe ;%>
  var sections = <%= @sections.to_json.html_safe ;%>
  var sensitivity_data = [
    ['PBO Economic Assumptions','','','','','Sensitivity Table','','','',''],
    [],
    ['Variables',	'PBO Assumption',	'User Input',	'',	'', 'Year 1',	'Year 2','Year 5']
    ];
  var table = document.getElementById('hot');
  var hot = new Handsontable(table, {
    data: sensitivity_data,
    formulas: true,
    rowHeaders: true,
    colHeaders: true,
    readOnly: true,
    autoColumnSize: true,
    mergeCells: [
      {row:0, col:0, colspan:5, rowspan: 1},
      {row:0, col:5, colspan:5, rowspan: 1},
    ]
    });
  var row;
  $.each(public_variables, function(i,v){
    if (v[0] != undefined) {
      hot.setDataAtCell(i+4, 0, v[0]);
    }
    if (v[1] != undefined) {
      hot.setDataAtCell(i+4, 1, v[1]);
      hot.setCellMeta(i+4, 1, 'readOnly', false);
    }
    if (v[2] != undefined) {
      hot.setDataAtCell(i+4, 2, v[2]);
      hot.setCellMeta(i+4, 2, 'readOnly', false);
    }
    row = i;
  });

  hot.setDataAtCell(row + 6, 0, 'Not Publicly Editable');
  row = row + 3;

  $.each(variables, function(i,v){
    if (v[0] != undefined) {
      hot.setDataAtCell(row+4, 0, v[0]);
    }
    if (v[1] != undefined) {
      hot.setDataAtCell(row+4, 1, v[1]);
      hot.setCellMeta(row+4, 1, 'readOnly', false);
    }
    row = row + 1;
  });

  $.each(sections, function(i,s){
    if(s != undefined) {
    hot.setDataAtCell(i+4, 4, s.name);
      if(!s.is_title) {
        hot.setCellMeta(i+4, 5, 'readOnly', false);
        hot.setCellMeta(i+4, 6, 'readOnly', false);
        hot.setCellMeta(i+4, 7, 'readOnly', false);
      } else {
        hot.setDataAtRowProp(i+4, 'title', s.name);
        hot.getCell(i+4, 4).style.fontWeight = 'bold';
        hot.getCell(i+4, 4).style.color = 'black';
      }
    }
  });

  function boldRenderer(instance, td, row, col, prop, value, cellProperties) {
    Handsontable.renderers.TextRenderer.apply(this, arguments);
    td.style.fontWeight = 'bold';
    td.style.color = 'black';
  }

  function italicRenderer(instance, td, row, col, prop, value, cellProperties) {
    Handsontable.renderers.TextRenderer.apply(this, arguments);
    td.style.fontStyle = 'oblique';
    td.style.color = 'black';
  }
  hot.updateSettings({
    cells: function(row, col, prop) {
      var cellProperties = {};
      if (row === 0) {
        cellProperties.renderer = boldRenderer; // uses function directly
      }

      if (row == 2) {
        cellProperties.renderer = italicRenderer; // uses function directly
      }
      if(prop == 'title') {
        console.log(prop);
      }
      return cellProperties;
    }
  });
</script>
