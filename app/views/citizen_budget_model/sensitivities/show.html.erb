<% content_for :breadcrumb do %>
<ol class="breadcrumb">
  <li><%= link_to _('Sensitivity Tables'), sensitivities_path %></li>
  <li class="active"><%= @sensitivity.name %>
    <%= link_to [:edit, @sensitivity], class: 'btn btn-default btn-xs', title: _('Edit') do %>
      <span class="glyphicon glyphicon-pencil"></span>
    <% end %>
  </li>
</ol>
<% end %>

<h2><%= _('Publicly Editable Variables') %></h2>
<% if @sensitivity.variables.any? %>

<ul class="list-unstyled index sortable" data-sort-url="<%= sort_variable_sensitivity_path%>">
<% @sensitivity.variables.where(public_editable: true).each do |variable| %>
  <li id="<%= dom_id(variable) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to variable.name, [@sensitivity, variable] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, variable] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>

<h2><%= _('Not Public Editable Variables') %></h2>
<ul class="list-unstyled index sortable" data-sort-url="<%= sort_variable_sensitivity_path%>">
<% @sensitivity.variables.where(public_editable: false).each do |variable| %>
  <li id="<%= dom_id(variable) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to variable.name, [@sensitivity, variable] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, variable] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>

<% end %>

<p>
  <%= link_to(new_sensitivity_variable_path(@sensitivity), class: 'btn btn-primary') do %>
    <span class="glyphicon glyphicon-plus"></span> <%= _('Add a variable') %>
  <% end %>
</p>


<h2><%= _('Sections') %></h2>
<% if @sensitivity.sensitivity_sections.any? %>

  <ul class="list-unstyled index sortable">
<% @sensitivity.sensitivity_sections.each do |section| %>
  <li id="<%= dom_id(section) %>">
    <span class="glyphicon glyphicon-resize-vertical"></span>
    <%= link_to section.name, [@sensitivity, section] %>
    <span class="actions">
      <%= link_to [:edit, @sensitivity, section] do %>
        <span class="glyphicon glyphicon-pencil"></span> <%= _('Edit') %>
      <% end %>
    </span>
  </li>
<% end %>
</ul>
<% end %>
<p>
  <%= link_to(new_sensitivity_sensitivity_section_path(@sensitivity), class: 'btn btn-primary') do %>
    <span class="glyphicon glyphicon-plus"></span> <%= _('Add a section') %>
  <% end %>
</p>

<div class="row">
  <div class="col-lg-8 col-md-10 col-sm-12">
    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
      <% if I18n.locale.to_s == 'en-CA' %>
        <div class="panel panel-default">
          <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
              <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Instructions for using the sensitivity excel interface
              </a>
            </h4>
          </div>
          <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
              <h4>The excel interface can be used for 3 things: </h4>
              <ol>
                <li>Setting a formula for an economic impact in a given year</li>

                <li>Testing the values that will be produced by the system on the front end</li>

                <li>Updating the values of the variables.</li>
              </ol>

              <p>To create a variable, a section, or an impact, one must use the blue buttons with the respective designation.</p>

              <p>The system currently supports 2 types of variables.  A Publicly Editable Variable that will be editable by users via
                sliders on the sensitivity table page and a Non-publicly Editable Variable that is only for use in the excel-like
                editing system.</p>

              <p>If you wish to use a Publicly Editable Variable in a formula, you must reference the respective User Input value
                (C column) in your formula.</p>

              <p>If you wish to use a Non-publicly Editable Variable you simply reference the respective cell in the B column.</p>

              <h4>Rules for using the excel-like interface:</h4>

              <ol>
                <li>You must reference cells with a capital letter. Lower case letters cannot be used</li>

                <li>You cannot use underscores (_) in your variable names</li>

                <li>You must only reference cells that have a numerical or formula value. The system will not parse text values</li>

                <li>Pre-calculated values are done top down, left to right.  So do not reference cells that are to the left of the
                cell you are editing</li>

                <li>Do not reference empty cells</li>

                <li>Do not use circular referencing in your formulas</li>

                <li>If you remove any variable, section, or impact, you must verify that your formulas still work as expected. If
                you have referenced something that no longer exists, the application will not be able to calculate the formula correctly</li>
              </ol>

            </div>
          </div>
        </div>
      <% end %>
      <% if I18n.locale.to_s == 'fr-CA' %>
        <div class="panel panel-default">
          <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
              <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="true" aria-controls="collapseOne">
                Consignes pour l’utilisation de l’interface de sensibilité Excel
              </a>
            </h4>
          </div>
          <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
              <h4>L’interface d’Excel sert à trois fonctions :</h4>
              <ol>
                <li>créer une formule qui calcule les incidences économiques au cours d’une année donnée;</li>
                <li>mettre à l’essai les valeurs produites en amont par le système;</li>
                <li>actualiser les valeurs des variables.</li>
              </ol>
              <p>Pour créer une variable, une section ou encore une incidence, il faut utiliser les boutons bleus aux désignations respectives.</p>
              <p>Le système supporte en ce moment deux types de variables. En effet, il y a la variable que le public peut modifier à l’aide des
              curseurs de défilement sur la page de table sensible ainsi que la variable non modifiable par le public, qui est utilisée seulement
              dans le système modifiable similaire à Excel.</p>
              <p>Pour employer une variable modifiable par le public dans une formule, il vous faut créer la référence à la valeur d’entrée
              respective de l’utilisateur (colonne C) dans votre formule.</p>
              <p>Pour employer une variable non modifiable par le public, il vous faut simplement créer la référence à la cellule respective
              de la colonne B.</p>

              <h4>Règles d’utilisation de l’interface similaire à Excel</h4>
              <ol>
                <li>Il vous faut toujours utiliser la majuscule pour créer une référence à des cellules. Les minuscules ne peuvent être utilisées.</li>
                <li>Il faut éviter d’utiliser le caractère de soulignement (_) dans le nom des variables.</li>
                <li>Il faut créer la référence seulement à des cellules à valeur numérique ou à valeur d’une formule. Le système n’analysera pas
                les valeurs textuelles.</li>
                <li>Les valeurs précalculées sont exécutées de haut en bas et de gauche à droite. Il ne faut donc pas créer de référence à des
                cellules à gauche de celle que vous êtes en train de modifier.</li>
                <li>Il faut éviter les références à des cellules vides.</li>
                <li>Il faut éviter les références circulaires dans vos formules.</li>
                <li>Si une variable, une section ou une incidence est supprimée, il vous faut vérifier que vos formules fonctionnent comme prévu.
                Si vous avez créé une référence à une valeur qui n’existe plus, l’application ne pourra pas calculer correctement la formule.</li>
              </ol>

            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

  <div id="hot"></div>
  <div class="formula2"></div>
  <div class="status"></div>

  <script>

  var table = document.getElementById('hot');
  var data = <%= @sensitivity.to_handsontable.to_json.html_safe %>;

  function firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {
    Handsontable.renderers.TextRenderer.apply(this, arguments);
    td.style.fontWeight = 'bold';
  }

  var hot2 = new Handsontable(table, {
    data: data,
    formulas: true,
    rowHeaders: true,
    colHeaders: true,
    columns: [
      {data: 'variable_name'},
      {data: 'pbo_assumption', type:'numeric', format:'0.00'},
      {data: 'user_input', type:'numeric', format:'0.00'},
      {data: ''},
      {data: 'sname'},
      {data: 'year_1_excel_formula', type:'numeric', format:'0.00'},
      {data: 'year_2_excel_formula', type:'numeric', format:'0.00'},
      {data: 'year_5_excel_formula', type:'numeric', format:'0.00'}
    ],
    cells: function (row, col, prop) {
      var cellProperties = {};

      if (row === 2 || (row==0 && col == 0)) {
        cellProperties.renderer = firstRowRenderer;
      }

      if ((data[row]['bold'] !== undefined && $.inArray(col, data[row]['bold']) > -1)) {
        cellProperties.renderer = firstRowRenderer;
      }

      return cellProperties;
    },
    afterChange: function (change, source) {
      if(change != undefined) {
        var re = /([A-Za-z]+\d+)+/g;
        var str = change[0][3];
        var data_row = change[0][0];
        var data_attr = change[0][1];
        var m, m2;
        var formula = str;

        if (data_attr == 'year_1_excel_formula' || data_attr == 'year_2_excel_formula' || data_attr == 'year_5_excel_formula') {
          while ((m = re.exec(str)) !== null) {
            if (m.index === re.lastIndex) {
                re.lastIndex++;
            }
            m2 = /([A-Za-z]+)(\d+)+/g.exec(m[0]);
            if (m2) {
              var row = parseInt(m2[2])-1;
              var col = m2[1];

              var impact_url = data[data_row]['impact_url'];
              if (data[row] !== undefined && data[row][col] !== undefined) {
                formula = formula.replace(m[0], data[row][col]);
              } else {
                $(".status").show().html("Error!");
              }
            }
          }
          var year_formula = data_attr.replace("_excel", "");
          var impact = {};
          impact[year_formula] = formula.replace("=", "");
          impact[data_attr] = str;
          $.ajax({
            url: impact_url,
            dataType: 'json',
            method: 'PUT',
            data: {
              impact: impact
            }
          }).fail(function() {
            $(".status").show().html("Error!");
          }).done(function() {
            $(".status").show().html("Saved");
          }).complete(function(){
            setTimeout(function(){
              $(".status").fadeOut(1000);
            }, 2000);
          });

          $(".formula2").html(formula);
        } else if(data_attr == 'pbo_assumption') {
          if (data_row > 0) {

            var variable_url = data[data_row]['variable_url'];
            $.ajax({
              url: variable_url,
              dataType: 'json',
              method: 'PUT',
              data: {
                variable: {
                  pbo_assumption: change[0][3]
                }
              }
            }).fail(function() {
              $(".status").show().html("Error!");
            }).done(function() {
              $(".status").show().html("Saved");
            }).complete(function(){
              setTimeout(function(){
                $(".status").fadeOut(1000);
              }, 2000);
            });

          } else {
            while ((m = re.exec(str)) !== null) {
              if (m.index === re.lastIndex) {
                  re.lastIndex++;
              }
              m2 = /([A-Za-z]+)(\d+)+/g.exec(m[0]);
              if (m2) {
                var row = parseInt(m2[2])-1;
                var col = m2[1];

                var url = data[data_row]['url'];
                if (data[row] !== undefined && data[row][col] !== undefined) {
                  formula = formula.replace(m[0], data[row][col]);
                } else {
                  $(".status").show().html("Error!");
                }
              }
            }

            var sensitivity = {};
            sensitivity['default_formula'] = formula.replace("=", "");
            sensitivity['default_excel_formula'] = str;
            $.ajax({
              url: url,
              dataType: 'json',
              method: 'PUT',
              data: {
                sensitivity: sensitivity
              }
            }).fail(function() {
              $(".status").show().html("Error!");
            }).done(function() {
              $(".status").show().html("Saved");
            }).complete(function(){
              setTimeout(function(){
                $(".status").fadeOut(1000);
              }, 2000);
            });

            $(".formula2").html(formula);
          }
        }
      }
    }
  });

</script>
